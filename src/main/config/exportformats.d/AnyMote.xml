<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (C) 2016 Bengt Martensson

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<exportformats:exportformat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                            xmlns:exportformats="http://www.harctoolbox.org/exportformats"
                            xsi:schemaLocation="http://www.harctoolbox.org/exportformats https://www.harctoolbox.org/schemas/exportformats.xsd"
                            name="AnyMote" extension="amsr" multiSignal="true" simpleSequence="false">
    <exportformats:documentation>
        <div>Animote is an remote control solution for Android, <a href="http://www.anymote.io/">now discontinued</a>.
        The export format consists of a text file with raw IR signals.
        </div>
        <div>Limitations:<ul>
            <!--li>Supports only one remote (ignores all but the first one),</li-->
            <li>Does not support ending sequences (ignores them).</li>
            </ul>
        </div>
    </exportformats:documentation>
    <xsl:stylesheet xmlns:girr="http://www.harctoolbox.org/Girr"
                    xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
        <xsl:output method="text" />
        <xsl:strip-space elements="*" />

        <xsl:template match="girr:remote[1]">
            <xsl:text>{"name":"</xsl:text>
            <xsl:value-of select="@remoteName"/>
            <xsl:text>","all_codes":[</xsl:text>
            <xsl:apply-templates select="girr:commandSet/girr:command"/>
            <xsl:text>]}</xsl:text>
        </xsl:template>

        <xsl:template match="girr:command">
            <xsl:text>{"function":"</xsl:text>
            <xsl:value-of select="@name"/>
            <xsl:text>","code1":"</xsl:text>
            <xsl:apply-templates select="girr:raw[1]"/>
            <xsl:text>"}</xsl:text>
            <xsl:if test="position()!=last()">
                <xsl:text>,</xsl:text>
            </xsl:if>
        </xsl:template>

        <xsl:template match="girr:raw">
            <xsl:value-of select="@frequency"/>
            <xsl:text>,</xsl:text>
            <xsl:apply-templates select="node()/node()"/>
        </xsl:template>

        <xsl:template match="girr:flash|girr:gap">
            <xsl:value-of select="round(number(.) * number(../../@frequency) div 1000000)"/>
            <xsl:if test="position()!=last()">
                <xsl:text>,</xsl:text>
            </xsl:if>
        </xsl:template>

    </xsl:stylesheet>
</exportformats:exportformat>