<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (C) 2018 Bengt Martensson

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<exportformats:exportformat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                            xmlns:exportformats="http://www.harctoolbox.org/exportformats"
                            xsi:schemaLocation="http://www.harctoolbox.org/exportformats https://www.harctoolbox.org/schemas/exportformats.xsd"
                            name="Home Remote" extension="xml" multiSignal="true" simpleSequence="false" metadata="true">

    <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                    xmlns:girr="http://www.harctoolbox.org/Girr"
                    exclude-result-prefixes="girr" version="1.0">

        <xsl:variable name="module">1</xsl:variable>
        <xsl:variable name="transmitter">1</xsl:variable>
        <xsl:variable name="ID">0</xsl:variable>
        <xsl:variable name="HostName">localhost</xsl:variable>
        <xsl:variable name="ConnectionRetries">1</xsl:variable>
        <xsl:variable name="sequenceNumber">1</xsl:variable>
        <xsl:variable name="count">1</xsl:variable>

        <xsl:output method="xml" />
        <xsl:strip-space elements="*" />

        <xsl:template match="/">
            <xsl:comment>This file was automatically generated by IrScrutinizer.</xsl:comment>
            <xsl:apply-templates select="//girr:remote"/>
        </xsl:template>

        <xsl:template match="girr:remote">
            <GCDevice>
                <xsl:attribute name="Name">
                    <xsl:value-of select="@name"/>
                </xsl:attribute>
                <xsl:attribute name="ConnectionRetries">
                    <xsl:value-of select="$ConnectionRetries"/>
                </xsl:attribute>
                <xsl:attribute name="ID">
                    <xsl:value-of select="$ID"/>
                </xsl:attribute>
                <xsl:attribute name="HostName">
                    <xsl:value-of select="$HostName"/>
                </xsl:attribute>
                <Variables>
                    <xsl:apply-templates select=".//girr:command"/>
                </Variables>
            </GCDevice>
        </xsl:template>

        <xsl:template match="girr:command">
            <GCVariable>
                <xsl:attribute name="Name">
                    <xsl:value-of select="@name"/>
                </xsl:attribute>
                <xsl:attribute name="IRCode">
                    <xsl:apply-templates select="girr:raw"/>
                </xsl:attribute>
                <xsl:attribute name="ConnectorAddress">
                    <xsl:value-of select="$module"/>
                    <xsl:text>:</xsl:text>
                    <xsl:value-of select="$transmitter"/>
                </xsl:attribute>
                <xsl:attribute name="ConnectorType">IR</xsl:attribute>
            </GCVariable>
        </xsl:template>

        <!-- Convert a raw (fat) signal to sendir form. -->
        <xsl:template match="girr:raw">
            <xsl:text>sendir,</xsl:text>
            <xsl:value-of select="$module"/>
            <xsl:text>:</xsl:text>
            <xsl:value-of select="$transmitter"/>
            <xsl:text>,</xsl:text>
            <xsl:value-of select="$sequenceNumber"/>
            <xsl:text>,</xsl:text>
            <xsl:value-of select="@frequency"/>
            <xsl:text>,</xsl:text>
            <xsl:value-of select="$count"/>
            <xsl:text>,</xsl:text>
            <xsl:value-of select="count(girr:intro/*) + 1"/>
            <xsl:text>,</xsl:text>
            <xsl:apply-templates select="girr:intro/*"/>
            <xsl:text>,</xsl:text>
            <xsl:apply-templates select="girr:repeat/*"/>
        </xsl:template>

        <xsl:template match="girr:flash|girr:gap">
            <xsl:value-of select="round(number(.) * number(../../@frequency) div 1000000)"/>
            <xsl:if test="position()!=last()">
                <xsl:text>,</xsl:text>
            </xsl:if>
        </xsl:template>

    </xsl:stylesheet>

</exportformats:exportformat>
