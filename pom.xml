<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.harctoolbox</groupId>
    <artifactId>IrScrutinizer</artifactId>
    <packaging>jar</packaging>
    <version>2.4.2-SNAPSHOT</version>
    <name>${project.artifactId}</name>
    <licenses>
        <license>
            <name>GPL 3+</name>
            <url>https://www.gnu.org/licenses/gpl.html</url>
        </license>
    </licenses>
    <description>Program for capturing, generating, analyzing, importing, and exporting of infrared signals.</description>
    <url>http://www.harctoolbox.org</url>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.nameLowercase>irscrutinizer</project.nameLowercase>
        <bundledjdk_url_sans_file.linux>https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.1%2B12/</bundledjdk_url_sans_file.linux>
        <bundledjdk.linux>OpenJDK21U-jdk_x64_linux_hotspot_21.0.1_12.tar.gz</bundledjdk.linux>
        <bundledjdk_url_sans_file.windows>https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.9%2B9/</bundledjdk_url_sans_file.windows>
        <bundledjdk.windows>OpenJDK17U-jdk_x86-32_windows_hotspot_17.0.9_9.zip</bundledjdk.windows>
        <bundledjdk_url_sans_file.mac>*** Currently not working ***</bundledjdk_url_sans_file.mac>
        <bundledjdk.mac>OpenJDK11U-jdk_x64_mac_hotspot_11.0.5_10.tar.gz</bundledjdk.mac>
        <inno_path>${basedir}/Inno_Setup_6/ISCC.exe</inno_path>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <IrpTransmogrifier.version>1.2.14</IrpTransmogrifier.version>
        <Girr.version>2.2.14</Girr.version>
    </properties>

    <profiles>
        <!-- Build the Windows setup.exe, if possible -->
        <profile>
            <id>buildSetup.exe</id>
            <activation>
                <file>
                    <exists>${inno_path}</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.2.0</version>
                        <executions>
                            <execution>
                                <id>create-windows-jre</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>../tools/mk-windows-jre.sh</executable>
                                    <workingDirectory>${project.build.directory}</workingDirectory>
                                    <arguments>
                                        <argument>../${bundledjdk.windows}</argument>
                                    </arguments>
                                </configuration>
                            </execution>

                            <execution>
                                <id>make-setup-exe</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <environmentVariables>
                                        <WINEDEBUG>-all</WINEDEBUG> <!-- Turns of pesky debugging output from wine -->
                                    </environmentVariables>
                                    <executable>wine</executable>
                                    <workingDirectory>${project.build.directory}</workingDirectory>
                                    <arguments>
                                        <argument>${inno_path}</argument>
                                        <argument>/Q</argument> <!-- quiet execution -->
                                        <argument>${project.artifactId}_inno.iss</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Build AppImage, if possible -->
        <profile>
            <id>buildAppImage</id>
            <activation>
                <os>
                    <name>Linux</name>
                    <arch>amd64</arch>
                </os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.2.0</version>
                        <executions>
                            <execution>
                                <id>make-appimage</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${basedir}/tools/mkappimage.sh</executable>
                                    <workingDirectory>${basedir}</workingDirectory>
                                    <arguments>
                                        <!--argument>-v</argument-->
                                        <argument>${project.name}</argument>
                                        <argument>${project.version}</argument>
                                        <argument>${bundledjdk.linux}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-remote-resources-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <resourceBundles>
                        <resourceBundle>${project.groupId}:IrpTransmogrifier:${IrpTransmogrifier.version}</resourceBundle>
                        <resourceBundle>${project.groupId}:Girr:${Girr.version}</resourceBundle>
                    </resourceBundles>
                </configuration>
                <executions>
                    <execution>
                        <id>process-remote-resources</id>
                        <goals>
                            <goal>process</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Generate Version.java from Version.xml using mkVersion.xsl. -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>xml-maven-plugin</artifactId>
                <version>1.1.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>transform</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <basedir>common/schemas</basedir>
                    <catalogHandling>strict</catalogHandling>
                    <catalogs>
                        <catalog>catalog.xml</catalog>
                    </catalogs>
                    <transformationSets>
                        <transformationSet>
                            <dir>src/main/xml</dir>
                            <outputDir>
                                ${project.build.directory}/generated-sources/xml/org/harctoolbox/irscrutinizer
                            </outputDir>
                            <includes>
                                <include>Version.xml</include>
                            </includes>
                            <stylesheet>${basedir}/common/xslt/mkVersion.xsl</stylesheet>
                            <parameters>
                                <parameter>
                                    <name>version</name>
                                    <value>${project.version}</value>
                                </parameter>
                                <parameter>
                                    <name>url</name>
                                    <value>${project.url}</value>
                                </parameter>
                                <parameter>
                                    <name>appName</name>
                                    <value>${project.artifactId}</value>
                                </parameter>
                                <parameter>
                                    <name>commitId</name>
                                    <value>${git.commit.id}</value>
                                </parameter>
                            </parameters>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                    <targetExtension>.java</targetExtension>
                                </fileMapper>
                            </fileMappers>
                        </transformationSet>
                        <transformationSet>
                            <dir>src/main/xml</dir>
                            <outputDir>
                                ${project.build.directory}/generated-sources/xml/org/harctoolbox/irscrutinizer
                            </outputDir>
                            <includes>
                                <include>Props.xml</include>
                            </includes>
                            <stylesheet>${basedir}/common/xslt/mkProps.xsl</stylesheet>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                    <targetExtension>.java</targetExtension>
                                </fileMapper>
                            </fileMappers>
                        </transformationSet>
                        <transformationSet>
                            <dir>src/main/xdocs</dir>
                            <outputDir>
                                ${project.build.directory}/generated-documents
                            </outputDir>
                            <includes>
                                <include>${project.name}.xml</include>
                                <include>Glossary.xml</include>
                            </includes>
                            <stylesheet>${basedir}/common/xslt/xdoc2html.xsl</stylesheet>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                    <targetExtension>.html</targetExtension>
                                </fileMapper>
                            </fileMappers>
                        </transformationSet>
                        <transformationSet>
                            <dir>${basedir}/target/maven-shared-archive-resources</dir>
                            <outputDir>${project.build.directory}/generated-documents</outputDir>
                            <includes>
                                <include>IrpTransmogrifier.xml</include>
                            </includes>
                            <stylesheet>${basedir}/common/xslt/xdoc2html.xsl</stylesheet>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                    <targetExtension>.html</targetExtension>
                                </fileMapper>
                            </fileMappers>
                        </transformationSet>
                        <transformationSet>
                            <dir>src/main/xdocs</dir>
                            <outputDir>${basedir}</outputDir>
                            <includes>
                                <include>${project.name}.xml</include>
                            </includes>
                            <stylesheet>${basedir}/tools/generate-build.xsl</stylesheet>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.RegExpFileMapper">
                                    <pattern>IrScrutinizer.xml</pattern>
                                    <replacement>BUILD.md</replacement>
                                </fileMapper>
                            </fileMappers>
                        </transformationSet>
                        <transformationSet>
                            <dir>${basedir}/target/maven-shared-archive-resources</dir>
                            <outputDir>${basedir}/target/doc</outputDir>
                            <includes>
                                <include>IrpProtocols.xml</include>
                            </includes>
                            <stylesheet>${basedir}/target/maven-shared-archive-resources/IrpProtocols2html.xsl</stylesheet>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                    <targetExtension>.html</targetExtension>
                                </fileMapper>
                            </fileMappers>
                        </transformationSet>
                    </transformationSets>
                    <!-- Uncomment to use a local copy -->
                    <!--catalogs>
                        <catalog>../HarcSchemas/catalog.xml</catalog>
                    </catalogs-->
                </configuration>

                <!-- Use xalan instead of builtin parser which doesn't really work -->
                <dependencies>
                    <dependency>
                        <groupId>xalan</groupId>
                        <artifactId>xalan</artifactId>
                        <version>2.7.2</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- Source and binary tarballs from src/assembly/* files. -->
            <!-- Left on its own, this plugin makes first the *-bin.zip, then the fat jar.
                 so no way that the latter can be included in the former. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.6.0</version>
                <executions>
                    <execution>
                        <!-- FIRST, make the fat jar, and NOT the *-bin.zip -->
                        <id>make-fat-jar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <archive>
                                <manifest>
                                    <mainClass>${project.groupId}.${project.nameLowercase}.${project.name}</mainClass>
                                </manifest>
                                <manifestEntries>
                                    <SplashScreen-Image>images/splash.png</SplashScreen-Image>
                                </manifestEntries>
                            </archive>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </execution>
                    <execution>
                        <!-- THEN, the *-bin.zip, with no fat jar -->
                        <id>make-bin-zip</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <descriptors>
                                <descriptor>src/assembly/target.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                    <!-- We do not need the *-src.zip -->
                    <!--execution>
                      <id>exec-src</id>
                      <configuration>
                        <descriptor>src/assembly/source.xml</descriptor>
                        <finalName>${project.name}-src-${project.version}</finalName>
                      </configuration>
                      <phase>package</phase>
                      <goals>
                        <goal>single</goal>
                      </goals>
                    </execution-->
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.12.1</version>
                <configuration>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.5.0</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/generated-sources/xml</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- Copy resources  in src/main/config to target dir. -->
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version> <!-- 3.2.0 does not work for us -->
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>compile</phase> <!-- must come after validate, since that unpacks the remote resources -->
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/config</directory>
                                    <include>*</include>
                                    <filtering>true</filtering>
                                </resource>
                                <resource>
                                    <directory>target/maven-shared-archive-resources</directory>
                                    <include>*</include>
                                </resource>
                                <resource>
                                    <directory>src/main/schemas</directory>
                                    <include>*.xsd</include>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-exportformats</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/exportformats.d</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/config/exportformats.d</directory>
                                    <include>*</include>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-resources-doc</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/doc</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/doc</directory>
                                    <filtering>true</filtering>
                                </resource>
                                <resource>
                                    <directory>target/generated-documents</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-resources-contributed</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/contributed</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>contributed</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <!-- Allow execution from the target directory, Linux64 only :-) -->
                    <execution>
                        <id>copy-linux64-so</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/Linux-amd64</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/native/Linux-amd64</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>sillify docs</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>unix2dos</executable> <!-- Fedora pkg: dos2unix -->
                            <workingDirectory>${project.build.directory}/doc</workingDirectory>
                            <arguments>
                                <argument>${project.name}.releasenotes.txt</argument>
                                <argument>LICENSE.txt</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy icon</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>cp</executable>
                            <workingDirectory>${project.build.directory}</workingDirectory>
                            <arguments>
                                <argument>--force</argument>
                                <argument>${basedir}/src/main/resources/icons/Crystal-Clear/64x64/apps/babelfish.png</argument>
                                <argument>${project.artifactId}.png</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-ico</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>icotool</executable> <!-- Fedora pkg: icoutils -->
                            <workingDirectory>${project.build.directory}</workingDirectory>
                            <arguments>
                                <argument>-o</argument>
                                <argument>${project.artifactId}.ico</argument>
                                <argument>-c</argument>
                                <argument>${project.artifactId}.png</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-HexCalculator-ico</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>icotool</executable> <!-- Fedora pkg: icoutils -->
                            <workingDirectory>${project.build.directory}</workingDirectory>
                            <arguments>
                                <argument>-o</argument>
                                <argument>HexCalculator.ico</argument>
                                <argument>-c</argument>
                                <argument>../src/main/resources/icons/Crystal-Clear/22x22/apps/calc.png</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-TimeFrequencyCalculator-ico</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>icotool</executable> <!-- Fedora pkg: icoutils -->
                            <workingDirectory>${project.build.directory}</workingDirectory>
                            <arguments>
                                <argument>-o</argument>
                                <argument>TimeFrequencyCalculator.ico</argument>
                                <argument>-c</argument>
                                <argument>../src/main/resources/icons/Crystal-Clear/22x22/apps/xclock.png</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-AmxBeaconListener-ico</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>icotool</executable> <!-- Fedora pkg: icoutils -->
                            <workingDirectory>${project.build.directory}</workingDirectory>
                            <arguments>
                                <argument>-o</argument>
                                <argument>AmxBeaconListener.ico</argument>
                                <argument>-c</argument>
                                <argument>../src/main/resources/icons/Crystal-Clear/22x22/actions/find.png</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>make-wrapper-executable</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>chmod</executable>
                            <workingDirectory>${project.build.directory}</workingDirectory>
                            <arguments>
                                <argument>+x</argument>
                                <argument>${project.nameLowercase}.sh</argument>
                                <argument>setup-${project.nameLowercase}.sh</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <!-- Build the MacOS App (unconditionally!) -->
                    <execution>
                        <id>make-macos-app</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${basedir}/tools/mkapp.sh</executable>
                            <workingDirectory>${basedir}</workingDirectory>
                            <arguments>
                                <argument>${project.artifactId}</argument>
                                <argument>${project.version}</argument>
                            </arguments>
                        </configuration>
                    </execution>

                    <!-- compute checksums -->
                    <!-- I know the checksum-maven-plugin, but it does not do what I want) -->
                    <execution>
                        <id>mk-checksums</id>
                        <phase>install</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${basedir}/common/scripts/mkchecksums.sh</executable>
                            <workingDirectory>${project.build.directory}</workingDirectory>
                            <arguments>
                                <argument>${project.artifactId}-${project.version}.exe</argument>
                                <argument>${project.artifactId}-${project.version}-bin.zip</argument>
                                <argument>${project.artifactId}-${project.version}-macOS.dmg</argument>
                                <argument>${project.artifactId}-${project.version}-x86_64.AppImage</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>4.9.10</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <dateFormat>yyyyMMdd</dateFormat><!--  human-readable part of the version number -->
                    <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                    <generateGitPropertiesFile>false</generateGitPropertiesFile><!-- somehow necessary. otherwise the variables are not available in the pom -->
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>HarcHardware</artifactId> <!-- Implicit invokes DevSlashLirc -->
            <version>2.4.2-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>RemoteLocator</artifactId> <!-- Includes Jirc, wich includes Girr, which includes IrpTransmogrifier, which includes JCommander -->
            <version>1.0.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.mrallen</groupId>
            <artifactId>tonto</artifactId>
            <version>1.44</version>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>7.9.0</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.beust</groupId>
                    <artifactId>jcommander</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>
</project>
